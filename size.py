from aiogram import Bot, Dispatcher
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent, Message
from aiogram.filters import CommandStart
import random
import hashlib
import asyncio
from datetime import datetime, timedelta
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")

# –ò–º—è –±–æ—Ç–∞
BOT_USERNAME = "psi_cock_size_bot"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
cache = {}
CACHE_EXPIRATION = timedelta(hours=6)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
def generate_message():
    size = random.randint(0, 50)
    if size <= 9:
        emoji = "ü§Æ"
    elif size <= 19:
        emoji = "ü•¥"
    elif size <= 29:
        emoji = "üòê"
    elif size <= 39:
        emoji = "üò≤"
    elif size <= 49:
        emoji = "ü§Ø"
    else:
        emoji = "ü´°"
    return size, f"My cock size is {size}cm {emoji}"

# –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ
def clean_cache():
    now = datetime.now()
    keys_to_delete = [key for key, (timestamp, _) in cache.items() if now - timestamp > CACHE_EXPIRATION]
    for key in keys_to_delete:
        del cache[key]

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def send_welcome(message: Message):
    await message.answer("Welcome! Use inline mode by typing @psi_cock_size_bot in any chat.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Inline Query
@dp.inline_query()
async def inline_mode(query: InlineQuery):
    user_id = query.from_user.id
    now = datetime.now()

    # –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∑–∞–ø–∏—Å–µ–π
    clean_cache()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in cache:
        timestamp, text = cache[user_id]
        if now - timestamp <= CACHE_EXPIRATION:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            result_id = hashlib.md5(text.encode()).hexdigest()
            result = InlineQueryResultArticle(
                id=result_id,
                title="Check your size",
                input_message_content=InputTextMessageContent(
                    message_text=f"{text}"
                ),
                description="Get your random size",
            )
            await query.answer([result], cache_time=1)
            return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    size, text = generate_message()
    cache[user_id] = (now, text)

    # –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –¥–ª—è –æ—Ç–≤–µ—Ç–∞ (hash)
    result_id = hashlib.md5(text.encode()).hexdigest()

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
    result = InlineQueryResultArticle(
        id=result_id,
        title="Check your size",
        input_message_content=InputTextMessageContent(
            message_text=f"{text} "
        ),
        description="Get your random size",
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await query.answer([result], cache_time=1)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –≤–µ–±—Ö—É–∫, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    await bot.delete_webhook(drop_pending_updates=True)

    # –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

